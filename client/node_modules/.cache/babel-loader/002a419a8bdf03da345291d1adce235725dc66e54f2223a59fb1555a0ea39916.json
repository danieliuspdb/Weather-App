{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\OneDrive\\\\Desktop\\\\IBM\\\\client\\\\src\\\\components\\\\CityDropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchCities } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityDropdown = ({\n  onSelect,\n  popularCities\n}) => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    const loadCities = async () => {\n      const data = await fetchCities();\n      setCities(data);\n    };\n    loadCities();\n  }, []);\n  const filteredCities = cities.filter(city => city.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search city...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      onClick: () => setIsOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-list\",\n      children: filteredCities.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => {\n          onSelect(city);\n          setIsOpen(false);\n        },\n        children: city.name\n      }, city.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(CityDropdown, \"+PGIlLH9sx4Di1/SV9S59S7yi6Q=\");\n_c = CityDropdown;\nexport default CityDropdown;\nvar _c;\n$RefreshReg$(_c, \"CityDropdown\");","map":{"version":3,"names":["React","useState","useEffect","fetchCities","jsxDEV","_jsxDEV","CityDropdown","onSelect","popularCities","_s","cities","setCities","searchTerm","setSearchTerm","isOpen","setIsOpen","loadCities","data","filteredCities","filter","city","name","toLowerCase","includes","className","children","type","placeholder","value","onChange","e","target","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","code","_c","$RefreshReg$"],"sources":["C:/Users/danie/OneDrive/Desktop/IBM/client/src/components/CityDropdown.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchCities } from '../utils/api';\r\n\r\nconst CityDropdown = ({ onSelect, popularCities }) => {\r\n  const [cities, setCities] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadCities = async () => {\r\n      const data = await fetchCities();\r\n      setCities(data);\r\n    };\r\n    loadCities();\r\n  }, []);\r\n\r\n  const filteredCities = cities.filter(city =>\r\n    city.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"city-dropdown\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search city...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        onClick={() => setIsOpen(true)}\r\n      />\r\n      {isOpen && (\r\n        <ul className=\"dropdown-list\">\r\n          {filteredCities.map(city => (\r\n            <li key={city.code} onClick={() => {\r\n              onSelect(city);\r\n              setIsOpen(false);\r\n            }}>\r\n              {city.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityDropdown;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,IAAI,GAAG,MAAMd,WAAW,CAAC,CAAC;MAChCQ,SAAS,CAACM,IAAI,CAAC;IACjB,CAAC;IACDD,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,cAAc,GAAGR,MAAM,CAACS,MAAM,CAACC,IAAI,IACvCA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,UAAU,CAACU,WAAW,CAAC,CAAC,CAC3D,CAAC;EAED,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAEhB,UAAW;MAClBiB,QAAQ,EAAGC,CAAC,IAAKjB,aAAa,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,OAAO,EAAEA,CAAA,KAAMjB,SAAS,CAAC,IAAI;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACDtB,MAAM,iBACLT,OAAA;MAAImB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1BP,cAAc,CAACmB,GAAG,CAACjB,IAAI,iBACtBf,OAAA;QAAoB2B,OAAO,EAAEA,CAAA,KAAM;UACjCzB,QAAQ,CAACa,IAAI,CAAC;UACdL,SAAS,CAAC,KAAK,CAAC;QAClB,CAAE;QAAAU,QAAA,EACCL,IAAI,CAACC;MAAI,GAJHD,IAAI,CAACkB,IAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAxCIH,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}