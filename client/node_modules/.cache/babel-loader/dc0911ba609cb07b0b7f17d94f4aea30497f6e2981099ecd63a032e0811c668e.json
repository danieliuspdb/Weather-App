{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\OneDrive\\\\Desktop\\\\IBM\\\\client\\\\src\\\\components\\\\Forecast.jsx\";\nimport React from 'react';\nimport { formatTemperature, formatDate, getWeatherIcon } from '../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forecast = ({\n  forecast\n}) => {\n  if (!forecast) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading forecast...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"5-Day Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-days\",\n      children: forecast.filter((_, index) => index % 24 === 0) // Get one forecast per day\n      .slice(0, 5).map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-day\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day\",\n          children: formatDate(day.forecastTimeUtc)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-icon\",\n          children: getWeatherIcon(day.conditionCode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp\",\n          children: formatTemperature(day.airTemperature)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"condition\",\n          children: day.conditionCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","formatTemperature","formatDate","getWeatherIcon","jsxDEV","_jsxDEV","Forecast","forecast","children","fileName","_jsxFileName","lineNumber","columnNumber","className","filter","_","index","slice","map","day","forecastTimeUtc","conditionCode","airTemperature","_c","$RefreshReg$"],"sources":["C:/Users/danie/OneDrive/Desktop/IBM/client/src/components/Forecast.jsx"],"sourcesContent":["import React from 'react';\r\nimport { formatTemperature, formatDate, getWeatherIcon } from '../utils/helpers';\r\n\r\nconst Forecast = ({ forecast }) => {\r\n  if (!forecast) return <div>Loading forecast...</div>;\r\n\r\n  return (\r\n    <div className=\"forecast\">\r\n      <h2>5-Day Forecast</h2>\r\n      <div className=\"forecast-days\">\r\n        {forecast\r\n          .filter((_, index) => index % 24 === 0) // Get one forecast per day\r\n          .slice(0, 5)\r\n          .map((day, index) => (\r\n            <div key={index} className=\"forecast-day\">\r\n              <div className=\"day\">{formatDate(day.forecastTimeUtc)}</div>\r\n              <div className=\"weather-icon\">{getWeatherIcon(day.conditionCode)}</div>\r\n              <div className=\"temp\">{formatTemperature(day.airTemperature)}</div>\r\n              <div className=\"condition\">{day.conditionCode}</div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Forecast;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,EAAEC,UAAU,EAAEC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACjC,IAAI,CAACA,QAAQ,EAAE,oBAAOF,OAAA;IAAAG,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEpD,oBACEP,OAAA;IAAKQ,SAAS,EAAC,UAAU;IAAAL,QAAA,gBACvBH,OAAA;MAAAG,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBP,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAL,QAAA,EAC3BD,QAAQ,CACNO,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;MAAA,CACvCC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACXC,GAAG,CAAC,CAACC,GAAG,EAAEH,KAAK,kBACdX,OAAA;QAAiBQ,SAAS,EAAC,cAAc;QAAAL,QAAA,gBACvCH,OAAA;UAAKQ,SAAS,EAAC,KAAK;UAAAL,QAAA,EAAEN,UAAU,CAACiB,GAAG,CAACC,eAAe;QAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC5DP,OAAA;UAAKQ,SAAS,EAAC,cAAc;UAAAL,QAAA,EAAEL,cAAc,CAACgB,GAAG,CAACE,aAAa;QAAC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvEP,OAAA;UAAKQ,SAAS,EAAC,MAAM;UAAAL,QAAA,EAAEP,iBAAiB,CAACkB,GAAG,CAACG,cAAc;QAAC;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnEP,OAAA;UAAKQ,SAAS,EAAC,WAAW;UAAAL,QAAA,EAAEW,GAAG,CAACE;QAAa;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAJ5CI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACW,EAAA,GArBIjB,QAAQ;AAuBd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}