{"ast":null,"code":"const [cities, setCities] = useState([]);\nconst [error, setError] = useState(null);\nuseEffect(() => {\n  const loadCities = async () => {\n    try {\n      setError(null);\n      const data = await fetchCities();\n      setCities(data);\n    } catch (err) {\n      setError(err.message.includes('502') ? 'Weather service is currently unavailable. Please try again later.' : 'Failed to load city list. Please check your connection.');\n      // You can add automatic retry logic here if needed\n    }\n  };\n  loadCities();\n}, []);","map":{"version":3,"names":["cities","setCities","useState","error","setError","useEffect","loadCities","data","fetchCities","err","message","includes"],"sources":["C:/Users/danie/OneDrive/Desktop/IBM/client/src/components/CityDropdown.jsx"],"sourcesContent":["const [cities, setCities] = useState([]);\r\nconst [error, setError] = useState(null);\r\n\r\nuseEffect(() => {\r\n  const loadCities = async () => {\r\n    try {\r\n      setError(null);\r\n      const data = await fetchCities();\r\n      setCities(data);\r\n    } catch (err) {\r\n      setError(\r\n        err.message.includes('502') \r\n          ? 'Weather service is currently unavailable. Please try again later.'\r\n          : 'Failed to load city list. Please check your connection.'\r\n      );\r\n      // You can add automatic retry logic here if needed\r\n    }\r\n  };\r\n\r\n  loadCities();\r\n}, []);"],"mappings":"AAAA,MAAM,CAACA,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;AACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;AAExCG,SAAS,CAAC,MAAM;EACd,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACFF,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMG,IAAI,GAAG,MAAMC,WAAW,CAAC,CAAC;MAChCP,SAAS,CAACM,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZL,QAAQ,CACNK,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,KAAK,CAAC,GACvB,mEAAmE,GACnE,yDACN,CAAC;MACD;IACF;EACF,CAAC;EAEDL,UAAU,CAAC,CAAC;AACd,CAAC,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}