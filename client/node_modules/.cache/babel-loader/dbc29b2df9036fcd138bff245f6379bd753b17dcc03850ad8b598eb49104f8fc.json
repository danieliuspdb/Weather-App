{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\OneDrive\\\\Desktop\\\\IBM\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchCities, fetchWeather, logCitySelection } from './utils/api';\nimport CityDropdown from './components/CityDropdown';\nimport CurrentWeather from './components/CurrentWeather';\nimport HourlyForecast from './components/HourlyForecast';\nimport PopularCities from './components/PopularCities';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport './styles/main.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State definitions\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [currentWeather, setCurrentWeather] = useState(null); // Renamed from 'weather' to be more explicit\n  const [forecastData, setForecastData] = useState(null); // Renamed from 'forecast'\n  const [popularCities, setPopularCities] = useLocalStorage('popularCities', []);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (selectedCity) {\n      const loadWeatherData = async () => {\n        try {\n          setLoading(true);\n          setError(null);\n          const data = await fetchWeather(selectedCity.code);\n\n          // Set both current weather and forecast data\n          setCurrentWeather(data.forecastTimestamps[0]); // Current conditions\n          setForecastData(data); // Full forecast data\n\n          // Update popular cities\n          setPopularCities(prev => {\n            const updated = [...prev];\n            const existingIndex = updated.findIndex(c => c.code === selectedCity.code);\n            if (existingIndex >= 0) {\n              updated[existingIndex].views = (updated[existingIndex].views || 0) + 1;\n            } else {\n              updated.push({\n                ...selectedCity,\n                views: 1\n              });\n            }\n            return updated.sort((a, b) => b.views - a.views).slice(0, 3);\n          });\n          await logCitySelection(selectedCity);\n        } catch (err) {\n          setError('Failed to load weather data');\n          console.error(err);\n        } finally {\n          setLoading(false);\n        }\n      };\n      loadWeatherData();\n    }\n  }, [selectedCity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-section\",\n        children: [/*#__PURE__*/_jsxDEV(CityDropdown, {\n          onSelect: setSelectedCity,\n          popularCities: popularCities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), popularCities.length > 0 && /*#__PURE__*/_jsxDEV(PopularCities, {\n          cities: popularCities,\n          onSelect: setSelectedCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this), selectedCity && !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n          weather: currentWeather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 32\n        }, this), forecastData && /*#__PURE__*/_jsxDEV(HourlyForecast, {\n          forecastData: forecastData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gU4eSb3VNYM2yQsylQfdBIDOQNA=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchCities","fetchWeather","logCitySelection","CityDropdown","CurrentWeather","HourlyForecast","PopularCities","useLocalStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedCity","setSelectedCity","currentWeather","setCurrentWeather","forecastData","setForecastData","popularCities","setPopularCities","loading","setLoading","error","setError","loadWeatherData","data","code","forecastTimestamps","prev","updated","existingIndex","findIndex","c","views","push","sort","a","b","slice","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","length","cities","weather","_c","$RefreshReg$"],"sources":["C:/Users/danie/OneDrive/Desktop/IBM/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchCities, fetchWeather, logCitySelection } from './utils/api';\r\nimport CityDropdown from './components/CityDropdown';\r\nimport CurrentWeather from './components/CurrentWeather';\r\nimport HourlyForecast from './components/HourlyForecast';\r\nimport PopularCities from './components/PopularCities';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\nimport './styles/main.scss';\r\n\r\nconst App = () => {\r\n  // State definitions\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [currentWeather, setCurrentWeather] = useState(null); // Renamed from 'weather' to be more explicit\r\n  const [forecastData, setForecastData] = useState(null); // Renamed from 'forecast'\r\n  const [popularCities, setPopularCities] = useLocalStorage('popularCities', []);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedCity) {\r\n      const loadWeatherData = async () => {\r\n        try {\r\n          setLoading(true);\r\n          setError(null);\r\n          \r\n          const data = await fetchWeather(selectedCity.code);\r\n          \r\n          // Set both current weather and forecast data\r\n          setCurrentWeather(data.forecastTimestamps[0]); // Current conditions\r\n          setForecastData(data); // Full forecast data\r\n          \r\n          // Update popular cities\r\n          setPopularCities(prev => {\r\n            const updated = [...prev];\r\n            const existingIndex = updated.findIndex(c => c.code === selectedCity.code);\r\n            if (existingIndex >= 0) {\r\n              updated[existingIndex].views = (updated[existingIndex].views || 0) + 1;\r\n            } else {\r\n              updated.push({ ...selectedCity, views: 1 });\r\n            }\r\n            return updated.sort((a, b) => b.views - a.views).slice(0, 3);\r\n          });\r\n\r\n          await logCitySelection(selectedCity);\r\n        } catch (err) {\r\n          setError('Failed to load weather data');\r\n          console.error(err);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      loadWeatherData();\r\n    }\r\n  }, [selectedCity]);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header>\r\n        <h1>Weather Forecast</h1>\r\n      </header>\r\n      \r\n      <main>\r\n        {/* City Selection Section */}\r\n        <div className=\"search-section\">\r\n          <CityDropdown onSelect={setSelectedCity} popularCities={popularCities} />\r\n          {popularCities.length > 0 && (\r\n            <PopularCities cities={popularCities} onSelect={setSelectedCity} />\r\n          )}\r\n        </div>\r\n\r\n        {/* Loading and Error States */}\r\n        {loading && <div className=\"loading\">Loading weather data...</div>}\r\n        {error && <div className=\"error\">{error}</div>}\r\n\r\n        {/* Weather Display Section */}\r\n        {selectedCity && !loading && !error && (\r\n          <>\r\n            {currentWeather && <CurrentWeather weather={currentWeather} />}\r\n            {forecastData && <HourlyForecast forecastData={forecastData} />}\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}