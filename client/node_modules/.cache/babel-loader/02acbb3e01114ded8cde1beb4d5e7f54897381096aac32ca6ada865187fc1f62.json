{"ast":null,"code":"export const fetchCities = async () => {\n  try {\n    var _data$;\n    const response = await fetch('http://localhost:5000/api/cities');\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'API request failed');\n    }\n    const data = await response.json();\n\n    // Validate API response structure\n    if (!Array.isArray(data) || !((_data$ = data[0]) !== null && _data$ !== void 0 && _data$.code)) {\n      throw new Error('Invalid data format from API');\n    }\n    return data;\n  } catch (error) {\n    console.error('City fetch error:', error.message);\n    throw error; // Re-throw for component handling\n  }\n};","map":{"version":3,"names":["fetchCities","_data$","response","fetch","ok","errorData","json","Error","error","data","Array","isArray","code","console","message"],"sources":["C:/Users/danie/OneDrive/Desktop/IBM/client/src/utils/api.js"],"sourcesContent":["export const fetchCities = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/cities');\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || 'API request failed');\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    // Validate API response structure\r\n    if (!Array.isArray(data) || !data[0]?.code) {\r\n      throw new Error('Invalid data format from API');\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('City fetch error:', error.message);\r\n    throw error; // Re-throw for component handling\r\n  }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IAAA,IAAAC,MAAA;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;IAEhE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,oBAAoB,CAAC;IAC1D;IAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACI,IAAI,CAAC,CAAC;;IAElC;IACA,IAAI,CAACI,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAI,GAAAR,MAAA,GAACQ,IAAI,CAAC,CAAC,CAAC,cAAAR,MAAA,eAAPA,MAAA,CAASW,IAAI,GAAE;MAC1C,MAAM,IAAIL,KAAK,CAAC,8BAA8B,CAAC;IACjD;IAEA,OAAOE,IAAI;EACb,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdK,OAAO,CAACL,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACM,OAAO,CAAC;IACjD,MAAMN,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}