{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\OneDrive\\\\Desktop\\\\IBM\\\\client\\\\src\\\\components\\\\HourlyForecast.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HourlyForecast = ({\n  forecastData\n}) => {\n  if (!forecastData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading forecast...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 29\n  }, this);\n  const dates = Object.keys(forecastData).sort();\n  const hours = ['00:00', '03:00', '06:00', '09:00', '12:00', '15:00', '18:00', '21:00'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hourly-forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"5-Day Hourly Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-cell time-label\",\n          children: \"Time \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), hours.map(hour => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-cell hour-header\",\n          children: hour\n        }, hour, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-cell date-label\",\n          children: new Date(date).toLocaleDateString('en-US', {\n            weekday: 'short',\n            month: 'short',\n            day: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), hours.map(hour => {\n          const forecast = forecastData[date][hour];\n          return forecast ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-cell\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temperature\",\n              children: [Math.round(forecast.temperature), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"condition\",\n              children: forecast.condition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wind\",\n              children: [forecast.windSpeed, \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)]\n          }, `${date}-${hour}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-cell empty\",\n            children: \"-\"\n          }, `${date}-${hour}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 19\n          }, this);\n        })]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = HourlyForecast;\nexport default HourlyForecast;\nvar _c;\n$RefreshReg$(_c, \"HourlyForecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HourlyForecast","forecastData","children","fileName","_jsxFileName","lineNumber","columnNumber","dates","Object","keys","sort","hours","className","map","hour","date","Date","toLocaleDateString","weekday","month","day","forecast","Math","round","temperature","condition","windSpeed","_c","$RefreshReg$"],"sources":["C:/Users/danie/OneDrive/Desktop/IBM/client/src/components/HourlyForecast.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst HourlyForecast = ({ forecastData }) => {\r\n  if (!forecastData) return <div>Loading forecast...</div>;\r\n\r\n  const dates = Object.keys(forecastData).sort();\r\n  const hours = ['00:00', '03:00', '06:00', '09:00', '12:00', '15:00', '18:00', '21:00'];\r\n\r\n  return (\r\n    <div className=\"hourly-forecast\">\r\n      <h2>5-Day Hourly Forecast</h2>\r\n      <div className=\"forecast-grid\">\r\n        {/* Header row with hours */}\r\n        <div className=\"grid-row header\">\r\n          <div className=\"grid-cell time-label\">Time →</div>\r\n          {hours.map(hour => (\r\n            <div key={hour} className=\"grid-cell hour-header\">{hour}</div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Forecast rows */}\r\n        {dates.map(date => (\r\n          <div key={date} className=\"grid-row\">\r\n            <div className=\"grid-cell date-label\">{new Date(date).toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' })}</div>\r\n            {hours.map(hour => {\r\n              const forecast = forecastData[date][hour];\r\n              return forecast ? (\r\n                <div key={`${date}-${hour}`} className=\"grid-cell\">\r\n                  <div className=\"temperature\">{Math.round(forecast.temperature)}°C</div>\r\n                  <div className=\"condition\">{forecast.condition}</div>\r\n                  <div className=\"wind\">{forecast.windSpeed} m/s</div>\r\n                </div>\r\n              ) : <div key={`${date}-${hour}`} className=\"grid-cell empty\">-</div>;\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HourlyForecast;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}