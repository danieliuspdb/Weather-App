{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\OneDrive\\\\Desktop\\\\IBM\\\\client\\\\src\\\\components\\\\CurrentWeather.jsx\";\nimport React from 'react';\nimport { formatTemperature, formatWindSpeed, getWeatherIcon } from '../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentWeather = ({\n  weather,\n  cityName\n}) => {\n  if (!weather) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading current weather...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"current-weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Current Weather in \", cityName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temp\",\n        children: [formatTemperature(weather.airTemperature), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"weather-icon\",\n          children: getWeatherIcon(weather.conditionCode)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Wind: \", formatWindSpeed(weather.windSpeed)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Humidity: \", weather.relativeHumidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Condition: \", weather.conditionCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = CurrentWeather;\nexport default CurrentWeather;\nvar _c;\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"names":["React","formatTemperature","formatWindSpeed","getWeatherIcon","jsxDEV","_jsxDEV","CurrentWeather","weather","cityName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","airTemperature","conditionCode","windSpeed","relativeHumidity","_c","$RefreshReg$"],"sources":["C:/Users/danie/OneDrive/Desktop/IBM/client/src/components/CurrentWeather.jsx"],"sourcesContent":["import React from 'react';\r\nimport { formatTemperature, formatWindSpeed, getWeatherIcon } from '../utils/helpers';\r\n\r\nconst CurrentWeather = ({ weather, cityName }) => {\r\n  if (!weather) return <div className=\"loading\">Loading current weather...</div>;\r\n\r\n  return (\r\n    <div className=\"current-weather\">\r\n      <div className=\"location-header\">\r\n        <h2>Current Weather in {cityName}</h2>\r\n      </div>\r\n      \r\n      <div className=\"weather-card\">\r\n        <div className=\"temp\">\r\n          {formatTemperature(weather.airTemperature)}\r\n          <span className=\"weather-icon\">{getWeatherIcon(weather.conditionCode)}</span>\r\n        </div>\r\n        <div className=\"details\">\r\n          <div>Wind: {formatWindSpeed(weather.windSpeed)}</div>\r\n          <div>Humidity: {weather.relativeHumidity}%</div>\r\n          <div>Condition: {weather.conditionCode}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,EAAEC,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAChD,IAAI,CAACD,OAAO,EAAE,oBAAOF,OAAA;IAAKI,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAA0B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE9E,oBACET,OAAA;IAAKI,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BL,OAAA;MAAKI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BL,OAAA;QAAAK,QAAA,GAAI,qBAAmB,EAACF,QAAQ;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAENT,OAAA;MAAKI,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BL,OAAA;QAAKI,SAAS,EAAC,MAAM;QAAAC,QAAA,GAClBT,iBAAiB,CAACM,OAAO,CAACQ,cAAc,CAAC,eAC1CV,OAAA;UAAMI,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEP,cAAc,CAACI,OAAO,CAACS,aAAa;QAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC,eACNT,OAAA;QAAKI,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBL,OAAA;UAAAK,QAAA,GAAK,QAAM,EAACR,eAAe,CAACK,OAAO,CAACU,SAAS,CAAC;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrDT,OAAA;UAAAK,QAAA,GAAK,YAAU,EAACH,OAAO,CAACW,gBAAgB,EAAC,GAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChDT,OAAA;UAAAK,QAAA,GAAK,aAAW,EAACH,OAAO,CAACS,aAAa;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAtBIb,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}