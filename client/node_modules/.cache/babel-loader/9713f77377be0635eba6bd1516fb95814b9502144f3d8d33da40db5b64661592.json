{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\OneDrive\\\\Desktop\\\\IBM\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchCities, fetchWeather, logCitySelection } from './utils/api';\nimport CityDropdown from './components/CityDropdown';\nimport CurrentWeather from './components/CurrentWeather';\nimport Forecast from './components/Forecast';\nimport PopularCities from './components/PopularCities';\nimport './styles/main.scss';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [popularCities, setPopularCities] = useLocalStorage('popularCities', []);\n  useEffect(() => {\n    if (selectedCity) {\n      const loadWeather = async () => {\n        const data = await fetchWeather(selectedCity.code);\n        setWeather(data.forecastTimestamps[0]);\n        setForecast(data.forecastTimestamps);\n\n        // Update popular cities\n        setPopularCities(prev => {\n          const existingIndex = prev.findIndex(c => c.code === selectedCity.code);\n          if (existingIndex >= 0) {\n            const updated = [...prev];\n            updated[existingIndex].views = (updated[existingIndex].views || 0) + 1;\n            return updated.sort((a, b) => b.views - a.views).slice(0, 3);\n          }\n          return [...prev, {\n            ...selectedCity,\n            views: 1\n          }].sort((a, b) => b.views - a.views).slice(0, 3);\n        });\n        await logCitySelection(selectedCity);\n      };\n      loadWeather();\n    }\n  }, [selectedCity]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-section\",\n        children: [/*#__PURE__*/_jsxDEV(CityDropdown, {\n          onSelect: setSelectedCity,\n          popularCities: popularCities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), popularCities.length > 0 && /*#__PURE__*/_jsxDEV(PopularCities, {\n          cities: popularCities,\n          onSelect: setSelectedCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), selectedCity && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n          forecast: forecast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WL/qxyyM3v5Iji8AH0JQ8P/rTSg=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchCities","fetchWeather","logCitySelection","CityDropdown","CurrentWeather","Forecast","PopularCities","useLocalStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedCity","setSelectedCity","weather","setWeather","forecast","setForecast","popularCities","setPopularCities","loadWeather","data","code","forecastTimestamps","prev","existingIndex","findIndex","c","updated","views","sort","a","b","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","length","cities","_c","$RefreshReg$"],"sources":["C:/Users/danie/OneDrive/Desktop/IBM/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchCities, fetchWeather, logCitySelection } from './utils/api';\r\nimport CityDropdown from './components/CityDropdown';\r\nimport CurrentWeather from './components/CurrentWeather';\r\nimport Forecast from './components/Forecast';\r\nimport PopularCities from './components/PopularCities';\r\nimport './styles/main.scss';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\n\r\nconst App = () => {\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [weather, setWeather] = useState(null);\r\n  const [forecast, setForecast] = useState(null);\r\n  const [popularCities, setPopularCities] = useLocalStorage('popularCities', []);\r\n\r\n  useEffect(() => {\r\n    if (selectedCity) {\r\n      const loadWeather = async () => {\r\n        const data = await fetchWeather(selectedCity.code);\r\n        setWeather(data.forecastTimestamps[0]);\r\n        setForecast(data.forecastTimestamps);\r\n        \r\n        // Update popular cities\r\n        setPopularCities(prev => {\r\n          const existingIndex = prev.findIndex(c => c.code === selectedCity.code);\r\n          if (existingIndex >= 0) {\r\n            const updated = [...prev];\r\n            updated[existingIndex].views = (updated[existingIndex].views || 0) + 1;\r\n            return updated.sort((a, b) => b.views - a.views).slice(0, 3);\r\n          }\r\n          return [...prev, { ...selectedCity, views: 1 }]\r\n            .sort((a, b) => b.views - a.views)\r\n            .slice(0, 3);\r\n        });\r\n\r\n        await logCitySelection(selectedCity);\r\n      };\r\n      loadWeather();\r\n    }\r\n  }, [selectedCity]);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header>\r\n        <h1>Weather Forecast</h1>\r\n      </header>\r\n      <main>\r\n        <div className=\"search-section\">\r\n          <CityDropdown onSelect={setSelectedCity} popularCities={popularCities} />\r\n          {popularCities.length > 0 && (\r\n            <PopularCities cities={popularCities} onSelect={setSelectedCity} />\r\n          )}\r\n        </div>\r\n        \r\n        {selectedCity && (\r\n          <>\r\n            <CurrentWeather weather={weather} />\r\n            <Forecast forecast={forecast} />\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}